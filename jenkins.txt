pipeline {
    agent  any
 parameters {
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    } 
 tools {
       terraform 'terraform'
    }
 
  stages {
  


  
        stage('checkout') {
            steps {
                 script{
                   
                        dir("terraform")
                        {
                            git "https://github.com/prakmyl/Terraform-Jenkins.git"
                        }
                    }
                }
            }

        stage('Plan') {
            
            steps {
                script{
               withCredentials([azureServicePrincipal(credentialsId: 'azconnect',
                                    subscriptionIdVariable: 'TF_VAR_clientid',
                                    clientIdVariable: 'TF_VAR_clientsecret',
                                    clientSecretVariable: 'TF_VAR_subscriptionid',
                                    tenantIdVariable: 'TF_VAR_tenantid')])  {
                    
                    env.TF_VAR_clientid= env.AZURE_SUBSCRIPTION_ID
                    env.TF_VAR_clientsecret=env.AZURE_CLIENT_SECRET
                    env.TF_VAR_subscriptionid= env.AZURE_SUBSCRIPTION_ID
                    env.TF_VAR_tenantid=env.AZURE_TENANT_ID

                sh 'terraform init'
                sh 'terraform plan -out=tfplan'
                sh 'terraform show -no-color tfplan > tfplan.txt'
                
            }
        }
}
}
      
  stage('Plan') {
            steps {
                sh 'pwd;cd terraform/ ; terraform init'
                sh "pwd;cd terraform/ ; terraform plan -out tfplan"
                sh 'pwd;cd terraform/ ; terraform show -no-color tfplan > tfplan.txt'
            }
        }
        stage('Approval') {
           when {
               not {
                   equals expected: true, actual: params.autoApprove
               }
           }

           steps {
               script {
                    def plan = readFile 'terraform/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
               }
           }
       }

        stage('Apply') {
            steps {
                sh 'terraform apply -input=false tfplan'
            }
        }
        
    }

  }

